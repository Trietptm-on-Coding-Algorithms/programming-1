
#include <stdio.h>
#include <stdint.h>

typedef unsigned long u64;

u64 sqrmod(u64 base, u64 mod)
{
    if(!(base & 0xFFFFFFFF00000000)) {
        return (base * base) % mod;
    }

    u64 a = base >> 32;
    u64 b = base & 0xFFFFFFFF;

    // b^2 (mod n)
    u64 t0 = b*b % mod;
    // 2*ab*(2^32)
    u64 t1 = a*b % mod;
    t1 = (t1 << 17) % mod;
    t1 = (t1 << 16) % mod;
    // a^2 * 2^32 * 2^32
    u64 t2 = a*a % mod;
    t2 = (t2 << 16) % mod;
    t2 = (t2 << 16) % mod;
    t2 = (t2 << 16) % mod;
    t2 = (t2 << 16) % mod;

    // the final
    return (t0+t1+t2) % mod;
}

// modulus in this challenge can be at most 10^13 (44 bits) so each remainder
// calculated can be that big - we're able to shift at most 20 at a time then
// in 64-bit register without overflow
u64 mulmod(u64 factor0, u64 factor1, u64 mod)
{
    u64 a = factor0 >> 32;
    u64 b = factor0 & 0xFFFFFFFF;
    u64 c = factor1 >> 32;
    u64 d = factor1 & 0xFFFFFFFF;

    //   a b
    // x c d
    // -----
    //     bd
    //   da
    //   cb
    // ca

    // 
    u64 t0 = d*b % mod;
    // 
    u64 t1 = d*a % mod;
    u64 t2 = c*b % mod;
    u64 t3 = (t1 + t2) % mod;
    t3 = (t3 << 16) % mod;
    t3 = (t3 << 16) % mod;
    // 
    u64 t4 = c*a % mod;
    t4 = (t4 << 16) % mod;
    t4 = (t4 << 16) % mod;
    t4 = (t4 << 16) % mod;
    t4 = (t4 << 16) % mod;

    // the final
    return (t0+t3+t4) % mod;
}

u64 mulmod_peasants(u64 a, u64 b, u64 m) {
    printf("mulmod(a=%lu, b=%lu, mod=%lu)\n", a, b, m);
    u64 res = 0;
    while (a) {
        if (a & 1)
            res = (res + b) % m;
        a >>= 1;
        b = (b << 1) % m;
    }
    return res;
}

u64 mulmod_peasants2(u64 a, u64 b, u64 m) {
    if(!(a & 0xFFFFFFFF00000000) && !(b & 0xFFFFFFFF00000000)) {
        return (a * b) % m;
    }

    u64 res = 0;
    u64 temp_b;

    /* Only needed if b may be >= m */
    if (b >= m) {
        if (m > UINT64_MAX / 2u)
            b -= m;
        else
            b %= m;
    }

    while (a != 0) {
        if (a & 1) {
            /* Add b to res, modulo m, without overflow */
            if (b >= m - res) /* Equiv to if (res + b >= m), without overflow */
                res -= m;
            res += b;
        }
        a >>= 1;

        /* Double b, modulo m */
        temp_b = b;
        if (b >= m - b)       /* Equiv to if (2 * b >= m), without overflow */
            temp_b -= m;
        b += temp_b;
    }
    return res;
}



// calculate a^n%mod
u64 powmod(u64 a, u64 n, u64 mod)
{
    printf("powmod(a=%lu, n=%lu, mod=%lu)\n", a, n, mod);
    u64 runner = a;
    u64 result = 1;
 
    while (n)
    {
        if (n & 1) {
            result = mulmod(result, runner, mod);
            //printf("%lx:%lx\n", (u64)(tmp>>64), (u64)(tmp & 0xFFFFFFFFFFFFFFFF));
            //printf("new result=%lu\n", result);
        }
        runner = sqrmod(runner, mod);
        //printf("new runner=%lu\n", runner);
        n >>= 1;
    }
    //printf("computed result=%lu\n", result);
    return result;
}

int main()
{
    //printf("%lu\n", powmod(4294967296, 2, 34722222222));
    //printf("%lu\n", sqrmod(4294967296, 34722222222));
    //return 0;
    if(powmod(6641203978126787356ull, 3778661179281623170ull, 6323947392560ull) != 3361429230096) return -1;
    if(powmod(5359964008002460803ull, 6922823225439125504ull, 9381763456855ull) != 1884925176431) return -1;
    if(powmod(5004898192290387222ull, 5299171253058968026ull, 6430883704639ull) != 5991470122204) return -1;
    if(powmod(1084935676880097228ull, 479841878898268594ull, 3875071599585ull) != 957769013394) return -1;
    if(powmod(4307031660347458243ull, 2639149166111454986ull, 3861829321686ull) != 919065085789) return -1;
    if(powmod(281353292757685528ull, 1427289757804811926ull, 6855858327049ull) != 5912706922464) return -1;
    if(powmod(4139752870371557438ull, 8605030662191383269ull, 9466603418168ull) != 8402934829288) return -1;
    if(powmod(3150863930892133827ull, 6913910835113676639ull, 862039769647ull) != 670174043665) return -1;
    if(powmod(5390454587082250504ull, 4146834150346550554ull, 9423314931851ull) != 2695782599236) return -1;
    if(powmod(4767262205633782772ull, 4710699689325036968ull, 339367683806ull) != 329293172352) return -1;
    if(powmod(8002141064243007473ull, 288499446392985874ull, 6240812801144ull) != 5060213306009) return -1;
    if(powmod(89641112131010319ull, 5260655590936585371ull, 2544392020286ull) != 1678385015981) return -1;
    if(powmod(5271348740333322758ull, 1052736730408294151ull, 4721684150245ull) != 4034192642372) return -1;
    if(powmod(127756653752403679ull, 5424274169005470802ull, 5914845319196ull) != 3712912119145) return -1;
    if(powmod(4940068756993991663ull, 8138736776562513235ull, 6088461429890ull) != 5819280424237) return -1;
    if(powmod(8630661771240989600ull, 151854276837868880ull, 4613721988265ull) != 3713981796885) return -1;
    if(powmod(7780901258842513150ull, 5171715822411661910ull, 3007556563094ull) != 2599919919602) return -1;
    if(powmod(3458311665977166614ull, 5890243620316720941ull, 1779762581055ull) != 549950191694) return -1;
    if(powmod(194315801028370468ull, 2139574613465497219ull, 3392271965661ull) != 2179801398121) return -1;
    if(powmod(2420861583399051235ull, 4919400498709656341ull, 6029142497734ull) != 4394167852017) return -1;
    if(powmod(250034762494246075ull, 2220806411425384325ull, 8609845848176ull) != 6488967923451) return -1;
    if(powmod(4515709953752132113ull, 8378953078866070785ull, 2273129948425ull) != 705277540743) return -1;
    if(powmod(7832260535765111552ull, 8092816275690778893ull, 4920413997353ull) != 4294903547066) return -1;
    if(powmod(4951535184197886454ull, 2805738548122154686ull, 6216261628170ull) != 4420598816056) return -1;
    if(powmod(7121606815140220673ull, 4131882412705348724ull, 4488524671820ull) != 3409970174641) return -1;
    if(powmod(6821567041717316153ull, 4470386178873825101ull, 9313755523500ull) != 6017945663153) return -1;
    if(powmod(440450142876147156ull, 3861194817958612672ull, 4418094344241ull) != 692125414998) return -1;
    if(powmod(2508403208932019068ull, 4453383398541932237ull, 5743401394281ull) != 4113595519657) return -1;
    if(powmod(3843538989192172664ull, 6798119711863893860ull, 6992420451306ull) != 917263032352) return -1;
    if(powmod(6724210084749013667ull, 8339592665907998148ull, 5229990741543ull) != 95421019636) return -1;
    if(powmod(5022897899561549057ull, 1242583832825361698ull, 1919356143461ull) != 583972411668) return -1;
    if(powmod(1188163338851460854ull, 1169654363665553668ull, 4281379536359ull) != 2969479373028) return -1;
    if(powmod(8926518202400602159ull, 2110136212154774761ull, 4853875316768ull) != 1462303483247) return -1;
    if(powmod(1043143409806987131ull, 7493800346779925068ull, 2728838570412ull) != 2067553500093) return -1;
    if(powmod(1197256831591734818ull, 4385273734499051604ull, 5315613001462ull) != 4909655678376) return -1;
    if(powmod(5112891123114496230ull, 5084716235719698562ull, 6033987186719ull) != 2975345418185) return -1;
    if(powmod(2418686297060765892ull, 5217958165061320634ull, 365677206585ull) != 251121189474) return -1;
    if(powmod(5405214206842333431ull, 8931473786336802581ull, 2767255928287ull) != 1571419099107) return -1;
    if(powmod(1219114346860975682ull, 4935639505184717597ull, 7773975786224ull) != 3485442835904) return -1;
    if(powmod(6484777965839258030ull, 4957787415194641219ull, 8029522941498ull) != 5211043430762) return -1;
    if(powmod(355350565270632959ull, 4317232207185873375ull, 9643480837240ull) != 3087444755879) return -1;
    if(powmod(8478013180108133277ull, 4110479867500381274ull, 6540813080635ull) != 4906251489239) return -1;
    if(powmod(1679681473222166049ull, 1866793890225685374ull, 4116143985173ull) != 1145459257024) return -1;
    if(powmod(2789571156958551224ull, 8893296169934454411ull, 5937145199007ull) != 5018533379987) return -1;
    if(powmod(8536988827421956533ull, 4334488787185871109ull, 7074288468899ull) != 7065779245732) return -1;
    if(powmod(3784781370291431784ull, 6449805269496730683ull, 7551695866761ull) != 2668545127350) return -1;
    if(powmod(3229814826082957094ull, 670795843828492381ull, 8796999311990ull) != 2616499325344) return -1;
    if(powmod(3949500398935959805ull, 300353229731149341ull, 2814716992680ull) != 1662048629605) return -1;
    if(powmod(2509213183358286067ull, 3199175898980267557ull, 3092142511880ull) != 2957997708027) return -1;
    if(powmod(2774462423637394417ull, 3177849919872474844ull, 7571353401808ull) != 3832332513377) return -1;
    if(powmod(8234933277323520757ull, 3795277938249783329ull, 549680689667ull) != 357200271627) return -1;
    if(powmod(195993739510856180ull, 6267640166459593228ull, 4400847127952ull) != 1818355111248) return -1;
    if(powmod(1762644412098028489ull, 1502411243830280507ull, 6242993477258ull) != 3514613826813) return -1;
    if(powmod(5067440162929866514ull, 4542994131127075707ull, 2077385520528ull) != 1706227039504) return -1;
    if(powmod(4178523818955782832ull, 3184978628379841580ull, 1624143940041ull) != 707903392401) return -1;
    if(powmod(356229387073871144ull, 5336154405689414363ull, 8920280074240ull) != 8732773863424) return -1;
    if(powmod(2621297029798133467ull, 2062705051728954578ull, 4839539786038ull) != 1412478725547) return -1;
    if(powmod(5978080786261482730ull, 8802555544040843693ull, 1824760556119ull) != 1645352296464) return -1;
    if(powmod(4418800661281079497ull, 8066482900578336320ull, 9424842204760ull) != 452699960521) return -1;
    if(powmod(5617459372689753784ull, 5785259650579973217ull, 5905973158125ull) != 5386465487869) return -1;
    if(powmod(2081908278042553828ull, 4684102886942760900ull, 3384258653085ull) != 162397807351) return -1;
    if(powmod(5805135393013687997ull, 3450715189141525158ull, 2916620209082ull) != 2003808027893) return -1;
    if(powmod(4377612996454628096ull, 2130536750547395261ull, 1507619519671ull) != 1208025949732) return -1;
    if(powmod(6174336634158005899ull, 7055236031252676503ull, 4464138994639ull) != 3978492849504) return -1;

    if(sqrmod(1190340197060068993ull, 3051273725419ull) != 2226858412249) return -1;
    if(sqrmod(3542002764737911196ull, 8110336695800ull) != 4253385310416) return -1;
    if(sqrmod(6119692776920265902ull, 7973392482478ull) != 4072427425974) return -1;
    if(sqrmod(2179982110449432184ull, 3314146728255ull) != 964935302356) return -1;
    if(sqrmod(7103662631725164147ull, 9979607686583ull) != 3687309406771) return -1;
    if(sqrmod(7436560610225692288ull, 5925928125226ull) != 4088722013386) return -1;
    if(sqrmod(6054758169193927020ull, 3622134364530ull) != 885541030350) return -1;
    if(sqrmod(4654911213073868517ull, 5106007710320ull) != 2439865743129) return -1;
    if(sqrmod(2866631484380312451ull, 5942059960768ull) != 3061625117449) return -1;
    if(sqrmod(5254380357123378429ull, 8094366660084ull) != 3417231343641) return -1;
    if(sqrmod(6281652470948372246ull, 7368163281144ull) != 6998832519460) return -1;
    if(sqrmod(6986393784333705684ull, 5822525840222ull) != 4728213234560) return -1;
    if(sqrmod(460249465642690664ull, 7113419308924ull) != 6670878932036) return -1;
    if(sqrmod(3304497221867609381ull, 649066680710ull) != 610561812151) return -1;
    if(sqrmod(2689431036554563217ull, 309935623713ull) != 148466058355) return -1;
    if(sqrmod(8922886863933905987ull, 4297071225663ull) != 1957625763820) return -1;
    if(sqrmod(7291056559934284172ull, 1909996831557ull) != 734463779275) return -1;
    if(sqrmod(7534031458242936455ull, 2346621009053ull) != 64632897079) return -1;
    if(sqrmod(8951816819416302364ull, 5380544960985ull) != 5120901832966) return -1;
    if(sqrmod(3724319537035808167ull, 6831193963447ull) != 1375425641552) return -1;
    if(sqrmod(5625659132516915523ull, 6060738743321ull) != 1492303851733) return -1;
    if(sqrmod(6229368210302619595ull, 3028373595584ull) != 781792599993) return -1;
    if(sqrmod(8234882674782191855ull, 4729470225334ull) != 698240464305) return -1;
    if(sqrmod(185742661290484083ull, 4989370060082ull) != 4819580406135) return -1;
    if(sqrmod(5314653924728291666ull, 6381759302712ull) != 2074455273484) return -1;
    if(sqrmod(3925124398474009079ull, 6413705926695ull) != 582731772586) return -1;
    if(sqrmod(3426559006658659210ull, 3686458081101ull) != 3628040142832) return -1;
    if(sqrmod(2394438999078003305ull, 174725839220ull) != 105682922045) return -1;
    if(sqrmod(1515915297716839052ull, 5527607252380ull) != 5099695426164) return -1;
    if(sqrmod(6794638318549058783ull, 876221720016ull) != 97992616657) return -1;
    if(sqrmod(4496254230426459744ull, 6053930932922ull) != 3509019263198) return -1;
    if(sqrmod(2622590617195474862ull, 8436435268673ull) != 4401574856685) return -1;
    if(sqrmod(376084899917372267ull, 982099809155ull) != 103232247099) return -1;
    if(sqrmod(5930466617293909684ull, 5292813057172ull) != 1873717146924) return -1;
    if(sqrmod(2615044504357043562ull, 6860041406974ull) != 3496227121920) return -1;
    if(sqrmod(4974490989565508862ull, 9195069598377ull) != 8928445017729) return -1;
    if(sqrmod(6051271258620255235ull, 6243012515174ull) != 5017712764447) return -1;
    if(sqrmod(6733158250050904813ull, 4883458280658ull) != 3615099380875) return -1;
    if(sqrmod(7955332402864546134ull, 7731743035636ull) != 1043035338520) return -1;
    if(sqrmod(8130680178959187976ull, 834503444446ull) != 600563926942) return -1;
    if(sqrmod(8971623316841665966ull, 5544030363431ull) != 5501537635750) return -1;
    if(sqrmod(8068909642447416346ull, 4453043630078ull) != 2105273652442) return -1;
    if(sqrmod(1254065603425997474ull, 6042947268473ull) != 4355866353775) return -1;
    if(sqrmod(8930806669062179017ull, 9645805616717ull) != 1464693734571) return -1;
    if(sqrmod(8600983861507233116ull, 13016598104ull) != 3090477168) return -1;
    if(sqrmod(1486174156661703940ull, 4594245118338ull) != 2315723883082) return -1;
    if(sqrmod(1436615431511429488ull, 6513066450639ull) != 413992416553) return -1;
    if(sqrmod(3643929718681737883ull, 9363070156538ull) != 5327235810835) return -1;
    if(sqrmod(230356900486817029ull, 1667367471072ull) != 547146263065) return -1;
    if(sqrmod(7986253531424780734ull, 3424277038443ull) != 933553228045) return -1;
    if(sqrmod(5908404079453927772ull, 6299633675526ull) != 6255081878506) return -1;
    if(sqrmod(5927047668309248449ull, 6758113922790ull) != 5367498775681) return -1;
    if(sqrmod(4236794016624161303ull, 8860622148064ull) != 978606881041) return -1;
    if(sqrmod(8774721005909676954ull, 4851941970928ull) != 2228056205268) return -1;
    if(sqrmod(3074857186359796909ull, 4710887101018ull) != 3116294266639) return -1;
    if(sqrmod(946228116294701831ull, 3927067682282ull) != 3130140728913) return -1;
    if(sqrmod(6969502328845667280ull, 392606350888ull) != 48835061464) return -1;
    if(sqrmod(2944134837071618959ull, 9618847239560ull) != 3185704240801) return -1;
    if(sqrmod(7131657206342386529ull, 550381597202ull) != 27692983407) return -1;
    if(sqrmod(3147277706325321876ull, 9628495581657ull) != 6436793867322) return -1;
    if(sqrmod(2420267577067318728ull, 7059125371611ull) != 4387546289583) return -1;
    if(sqrmod(4191312055563518797ull, 363450983442ull) != 194589090229) return -1;
    if(sqrmod(7471651722915888436ull, 3239035869380ull) != 1625060989616) return -1;
    if(sqrmod(1795301898346255703ull, 5151203177357ull) != 962590564241) return -1;

    if(mulmod(6641203978126787356ull, 3778661179281623170ull, 6323947392560ull) != 796485178440) return -1;
    if(mulmod(5359964008002460803ull, 6922823225439125504ull, 9381763456855ull) != 7963766795182) return -1;
    if(mulmod(5004898192290387222ull, 5299171253058968026ull, 6430883704639ull) != 3792466460684) return -1;
    if(mulmod(1084935676880097228ull, 479841878898268594ull, 3875071599585ull) != 2454699089352) return -1;
    if(mulmod(4307031660347458243ull, 2639149166111454986ull, 3861829321686ull) != 3154432526540) return -1;
    if(mulmod(281353292757685528ull, 1427289757804811926ull, 6855858327049ull) != 1153401387367) return -1;
    if(mulmod(4139752870371557438ull, 8605030662191383269ull, 9466603418168ull) != 8256869489734) return -1;
    if(mulmod(3150863930892133827ull, 6913910835113676639ull, 862039769647ull) != 689385997783) return -1;
    if(mulmod(5390454587082250504ull, 4146834150346550554ull, 9423314931851ull) != 401707259467) return -1;
    if(mulmod(4767262205633782772ull, 4710699689325036968ull, 339367683806ull) != 56711988468) return -1;
    if(mulmod(8002141064243007473ull, 288499446392985874ull, 6240812801144ull) != 3726229803826) return -1;
    if(mulmod(89641112131010319ull, 5260655590936585371ull, 2544392020286ull) != 1366384633177) return -1;
    if(mulmod(5271348740333322758ull, 1052736730408294151ull, 4721684150245ull) != 2867794301633) return -1;
    if(mulmod(127756653752403679ull, 5424274169005470802ull, 5914845319196ull) != 1711363537502) return -1;
    if(mulmod(4940068756993991663ull, 8138736776562513235ull, 6088461429890ull) != 5648794400095) return -1;
    if(mulmod(8630661771240989600ull, 151854276837868880ull, 4613721988265ull) != 1186910628650) return -1;
    if(mulmod(7780901258842513150ull, 5171715822411661910ull, 3007556563094ull) != 78648197142) return -1;
    if(mulmod(3458311665977166614ull, 5890243620316720941ull, 1779762581055ull) != 646431862734) return -1;
    if(mulmod(194315801028370468ull, 2139574613465497219ull, 3392271965661ull) != 2973280303588) return -1;
    if(mulmod(2420861583399051235ull, 4919400498709656341ull, 6029142497734ull) != 2346633353569) return -1;
    if(mulmod(250034762494246075ull, 2220806411425384325ull, 8609845848176ull) != 3228349224103) return -1;
    if(mulmod(4515709953752132113ull, 8378953078866070785ull, 2273129948425ull) != 1785376736605) return -1;
    if(mulmod(7832260535765111552ull, 8092816275690778893ull, 4920413997353ull) != 3946142302408) return -1;
    if(mulmod(4951535184197886454ull, 2805738548122154686ull, 6216261628170ull) != 5231506378204) return -1;
    if(mulmod(7121606815140220673ull, 4131882412705348724ull, 4488524671820ull) != 3716678999752) return -1;
    if(mulmod(6821567041717316153ull, 4470386178873825101ull, 9313755523500ull) != 8188611520453) return -1;
    if(mulmod(440450142876147156ull, 3861194817958612672ull, 4418094344241ull) != 164904388167) return -1;
    if(mulmod(2508403208932019068ull, 4453383398541932237ull, 5743401394281ull) != 1715019645827) return -1;
    if(mulmod(3843538989192172664ull, 6798119711863893860ull, 6992420451306ull) != 5502845768584) return -1;
    if(mulmod(6724210084749013667ull, 8339592665907998148ull, 5229990741543ull) != 386525431941) return -1;
    if(mulmod(5022897899561549057ull, 1242583832825361698ull, 1919356143461ull) != 867945733445) return -1;
    if(mulmod(1188163338851460854ull, 1169654363665553668ull, 4281379536359ull) != 963092330170) return -1;
    if(mulmod(8926518202400602159ull, 2110136212154774761ull, 4853875316768ull) != 4723692712583) return -1;
    if(mulmod(1043143409806987131ull, 7493800346779925068ull, 2728838570412ull) != 2189945250324) return -1;
    if(mulmod(1197256831591734818ull, 4385273734499051604ull, 5315613001462ull) != 3719665759378) return -1;
    if(mulmod(5112891123114496230ull, 5084716235719698562ull, 6033987186719ull) != 2192579634066) return -1;
    if(mulmod(2418686297060765892ull, 5217958165061320634ull, 365677206585ull) != 49425208218) return -1;
    if(mulmod(5405214206842333431ull, 8931473786336802581ull, 2767255928287ull) != 706600523025) return -1;
    if(mulmod(1219114346860975682ull, 4935639505184717597ull, 7773975786224ull) != 2972340553322) return -1;
    if(mulmod(6484777965839258030ull, 4957787415194641219ull, 8029522941498ull) != 253594395476) return -1;
    if(mulmod(355350565270632959ull, 4317232207185873375ull, 9643480837240ull) != 3865055699705) return -1;
    if(mulmod(8478013180108133277ull, 4110479867500381274ull, 6540813080635ull) != 3435376420843) return -1;
    if(mulmod(1679681473222166049ull, 1866793890225685374ull, 4116143985173ull) != 2174485630092) return -1;
    if(mulmod(2789571156958551224ull, 8893296169934454411ull, 5937145199007ull) != 5885270949795) return -1;
    if(mulmod(8536988827421956533ull, 4334488787185871109ull, 7074288468899ull) != 3049085367453) return -1;
    if(mulmod(3784781370291431784ull, 6449805269496730683ull, 7551695866761ull) != 5446865969784) return -1;
    if(mulmod(3229814826082957094ull, 670795843828492381ull, 8796999311990ull) != 5588398337834) return -1;
    if(mulmod(3949500398935959805ull, 300353229731149341ull, 2814716992680ull) != 2448913720065) return -1;
    if(mulmod(2509213183358286067ull, 3199175898980267557ull, 3092142511880ull) != 2846452354079) return -1;
    if(mulmod(2774462423637394417ull, 3177849919872474844ull, 7571353401808ull) != 4763837784092) return -1;
    if(mulmod(8234933277323520757ull, 3795277938249783329ull, 549680689667ull) != 480960901623) return -1;
    if(mulmod(195993739510856180ull, 6267640166459593228ull, 4400847127952ull) != 4064938532960) return -1;
    if(mulmod(1762644412098028489ull, 1502411243830280507ull, 6242993477258ull) != 5457060220629) return -1;
    if(mulmod(5067440162929866514ull, 4542994131127075707ull, 2077385520528ull) != 317998857318) return -1;
    if(mulmod(4178523818955782832ull, 3184978628379841580ull, 1624143940041ull) != 1333567760742) return -1;
    if(mulmod(356229387073871144ull, 5336154405689414363ull, 8920280074240ull) != 5731200870712) return -1;
    if(mulmod(2621297029798133467ull, 2062705051728954578ull, 4839539786038ull) != 2100675260324) return -1;
    if(mulmod(5978080786261482730ull, 8802555544040843693ull, 1824760556119ull) != 802124093151) return -1;
    if(mulmod(4418800661281079497ull, 8066482900578336320ull, 9424842204760ull) != 1664543642680) return -1;
    if(mulmod(5617459372689753784ull, 5785259650579973217ull, 5905973158125ull) != 5035289351253) return -1;
    if(mulmod(2081908278042553828ull, 4684102886942760900ull, 3384258653085ull) != 2512470101235) return -1;
    if(mulmod(5805135393013687997ull, 3450715189141525158ull, 2916620209082ull) != 2466238115842) return -1;
    if(mulmod(4377612996454628096ull, 2130536750547395261ull, 1507619519671ull) != 1173822357365) return -1;
    if(mulmod(6174336634158005899ull, 7055236031252676503ull, 4464138994639ull) != 2793095667048) return -1;   

    printf("PASS\n");
    return 0;
}
